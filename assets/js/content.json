{
    "title": "Python 3 - Crowd Course",
    "navigation": [{
        "name": "Introduction",
        "children": [{
            "name": "Getting Started",
            "desc": "This chapter explains what python is as a programming language and why should we learn python.",
            "module": "1"
        }, {
            "name": "Instructions",
            "desc": "This chapter introduces the interactive portal and teaches you how to make use of the features.",
            "module": "2"
        }]
    }, {
        "name": "Basics",
        "children": [{
            "name": "1.1 - Number, Operators and Operations",
            "desc": "Introduction to python basic numeric and boolean datatypes and operations using them.",
            "module": "3"
        }, {
            "name": "1.2 - Basic Input and Output Operators",
            "module": "4"
        }, {
            "name": "1.3 - Strings",
            "module": "5"
        }, {
            "name": "1.4 - Lists",
            "module": "6"
        }]
    }, {
        "name": "Intermediate",
        "children": [{
            "name": "2.1 - Control Flow",
            "module": "7"
        }, {
            "name": "2.2 - Functions",
            "module": "8"
        }, {
            "name": "Datastructures",
            "module": "10"
        }, {
            "name": "Classes",
            "module": "11"
        }, {
            "name": "Recursion",
            "module": "12"
        }, {
            "name": "Debugging",
            "module": "13"
        }, {
            "name": "Assertions and Exemptions",
            "module": "14"
        }, {
            "name": "Efficiency and Orders of Growth - Time",
            "module": "15"
        }, {
            "name": "Simple Algorithms",
            "module": "16"
        }]
    }, {
        "name": "Advanced",
        "children": [{
            "name": "Modules",
            "module": "17"
        }, {
            "name": "File IO",
            "module": "18"
        }, {
            "name": "Error and Exceptions",
            "module": "19"
        }, {
            "name": "Memory and search",
            "module": "20"
        }, {
            "name": "Multithreading",
            "module": "20"
        }, {
            "name": "Network and Sockets",
            "module": "20"
        }]
    }],
    "modules": {
        "1": {
            "name": "Getting Started",
            "videoId": "Oe6rHPmFY3o",
            "timerData": []
        },
        "2": {
            "name": "Instructions",
            "videoId": "Oe6rHPmFY3o",
            "timerData": []
        },
        "3": {
            "name": "1.1 - Number, Operators and Operations",
            "videoId": "hdUSqV34asA",
            "timerData": [{
                "time": "58",
                "end": "60",
                "pause": "false",
                "datafor": "a = 2 # a is an integer\nb = -7 # b is also an integer\n\nprint(a, b)"
            },{
                "time": "66",
                "end": "68",
                "pause": "false",
                "datafor": "a = 2 # a is an integer\nb = -7 # b is also an integer\nc = 3.2 # c is a floating point number\nd = -7.5 # d is also a floating point number\n\nprint(a, b, c, d)"
            },{
                "time": "174",
                "end": "176",
                "pause": "false",
                "datafor": "a = 6 + 3 # Addition of two integers gives an integer\nb = 7.5 + 2.4 # Addition of two floating point numbers give a floating point number.\n\nprint(a, b)"
            },{
                "time": "198",
                "end": "200",
                "pause": "false",
                "datafor": "a = 6 * -7.3 # Unary operator acts before the binary. Same as 6 * (-7.3)\n\nprint(a)"
            },{
                "time": "208",
                "end": "210",
                "pause": "true",
                "quiz": {
                    "question": "What will be the result of this ?<pre>1 * 5 + -5  </pre>",
                    "options": ["5", "Error", "0"],
                    "correct": 2
                }
            },{
                "time": "291",
                "end": "293",
                "pause": "false",
                "datafor": "a = 2**3\nprint(a)\n# This prints 8"
            },{
                "time": "302",
                "end": "304",
                "pause": "false",
                "datafor": "a = 4**0.5\nprint(a)\n# This prints 2"
            },{
                "time": "325",
                "end": "327",
                "pause": "false",
                "datafor": "a = 2**-2\nprint(a)\n# This prints 0.25"
            },{
                "time": "334",
                "end": "336",
                "pause": "false",
                "datafor": "a = pow(2, 3) # this uses pow function\nprint(a)\n# This prints 8"
            },{
                "time": "390",
                "end": "392",
                "pause": "false",
                "datafor": "a = abs(-7) \nprint(a)\n# This prints 7"
            },{
                "time": "410",
                "end": "412",
                "pause": "false",
                "datafor": "a = round(4.4) \nprint(a)\n# This prints 4.0"
            },{
                "time": "440",
                "end": "442",
                "pause": "false",
                "datafor": ""
            },{
                "time": "468",
                "end": "470",
                "pause": "false",
                "datafor": "a = (1 + 1) == 2\nprint(a) # prints True"
            },{
                "time": "485",
                "end": "487",
                "pause": "false",
                "datafor": "a = (1 + 1) == 2\nprint(a) # prints True\n\nb = (1 * 0) == 1\nprint(b) # prints False"
            },{
                "time": "516",
                "end": "518",
                "pause": "false",
                "datafor": "a = (1 == 2) or (1 == 1)\nprint(a) # prints True\n\nb = (1 * 0) == 1\nprint(b) # prints False"
            },{
                "time": "566",
                "end": "568",
                "pause": "false",
                "datafor": "a = (1 == 2) or (1 == 1)\nprint(a) # prints True\n\nb = (1 * 0) == 1\nprint(b) # prints False\n\nb = (1 == 1) and not (1 == 2)\nprint(b) # prints True"
            },{
                "time": "602",
                "end": "604",
                "pause": "true",
                "quiz": {
                    "question": "What will be the result of this ?<pre>(2 * 3) == 6 and 5.0 == ( 25 / 5 )</pre>",
                    "options": ["True", "False", "Error"],
                    "correct": 0
                }
            }]
        },
        "4": {
            "name": "1.2 - Basic Input and Output Operators",
            "videoId": "db3C4o__SLw",
            "timerData": []
        },
        // "5": {
        //     "name": "1.3 - Strings",
        //     "videoId": "db3C4o__SLw",
        //     "timerData": []
        // },
        "6": {
            "name": "1.4 - Lists",
            "videoId": "VMdWMr9unPw",
            "timerData": []
        },
        "7": {
            "name": "2.1 - Control Flow",
            "videoId": "Y_hPiOhnlu0",
            "timerData": []
        },
        "8": {
            "name": "2.2 - Functions",
            "videoId": "eYKvaRPc5yY",
            "timerData": []
        },
        "5": {
            "name": "Why Python ?",
            "videoId": "Oe6rHPmFY3o",
            "timerData": [
                { "time": "0", "end": "14", "datafor": "Intro to Python: Loops", "slidedata": "images/1.jpg", "pause": "false" },
                { "time": "14", "end": "60", "datafor": "What is a loop", "slidedata": "images/2.jpg", "pause": "false" },
                { "time": "60", "end": "91", "datafor": "While loops", "slidedata": "images/3.jpg", "pause": "false" }, {
                    "time": "92",
                    "end": "94",
                    "datafor": "While loops",
                    "slidedata": "images/3.jpg",
                    "pause": "true",
                    "quiz": {
                        "question": "What version of Python is being used in this course?",
                        "options": ["2.6.6", "2.7.9", "3.x"],
                        "correct": 2
                    }
                }, {
                    "time": "104",
                    "end": "106",
                    "datafor": "#Hello friends, This is ashukat. Today, we are going to write\n#a simple while loop\ncount = 0\nwhile (count < 9):\n\tprint(\"This is the count:\",count)\n\tcount = count + 1\n#now execute the code",
                    "slidedata": "images/4.jpg",
                    "pause": "true"
                },
                { "time": "107", "end": "158", "datafor": "Infinite loops", "slidedata": "images/4.jpg", "pause": "false" },
                { "time": "158", "end": "242", "datafor": "Iterables", "slidedata": "images/5.jpg", "pause": "false" },
                { "time": "242", "end": "277", "datafor": "For loops", "slidedata": "images/6.jpg", "pause": "false" },
                { "time": "277", "end": "321", "datafor": "Nesting", "slidedata": "images/7.jpg", "pause": "false" }
            ]
        }
    }
}
